#pragma once

#include <stdint.h>

#ifdef __cplusplus
extern "C" {
#endif // __cplusplus

#define ETHOSU_ARENA_SIZE 1152000
__attribute__((section(".ethosu_arena"), aligned(16)))
static uint8_t ethosu_arena[ETHOSU_ARENA_SIZE];

// W (288,288) @ x (288,) -> xout (288,)
__attribute__((section(".cms_data"), aligned(16)))
static unsigned char cmd_data_b_9_h_288_w_1_c_32[] = {
    0x43, 0x4f, 0x50, 0x31, 0x01, 0x00, 0x10, 0x00,
    0x18, 0x01, 0x00, 0x20, 0x00, 0x70, 0x00, 0x20,
    0x05, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,
    0x05, 0x00, 0x00, 0x00, 0x02, 0x00, 0x8e, 0x00,
    0x85, 0x01, 0x01, 0x00, 0x8f, 0x01, 0x03, 0x00,
    0x80, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x81, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x82, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x83, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x8b, 0x01, 0x00, 0x00, 0x8c, 0x01, 0x00, 0x00,
    0x8a, 0x01, 0x00, 0x00, 0x85, 0x40, 0x00, 0x00,
    0x20, 0x00, 0x00, 0x00, 0x84, 0x40, 0x00, 0x00,
    0x20, 0x00, 0x00, 0x00, 0x86, 0x40, 0x00, 0x00,
    0x01, 0x00, 0x00, 0x00, 0x89, 0x01, 0x00, 0x00,
    0x2e, 0x01, 0x00, 0x00, 0x24, 0x40, 0x00, 0x00,
    0x01, 0x00, 0x00, 0x00, 0x05, 0x01, 0x01, 0x00,
    0x0f, 0x01, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x03, 0x40, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x0b, 0x01, 0x00, 0x00,
    0x0c, 0x01, 0x00, 0x00, 0x0a, 0x01, 0x1f, 0x01,
    0x04, 0x01, 0x1f, 0x00, 0x05, 0x40, 0x00, 0x00,
    0x00, 0x24, 0x00, 0x00, 0x04, 0x40, 0x00, 0x00,
    0x20, 0x00, 0x00, 0x00, 0x06, 0x40, 0x00, 0x00,
    0x01, 0x00, 0x00, 0x00, 0x09, 0x01, 0x00, 0x00,
    0x07, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00,
    0x01, 0x01, 0x00, 0x00, 0x03, 0x01, 0x00, 0x00,
    0x02, 0x01, 0x00, 0x00, 0x14, 0x01, 0x05, 0x01,
    0x1f, 0x01, 0x01, 0x00, 0x10, 0x40, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x11, 0x40, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x12, 0x40, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x13, 0x40, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x12, 0x01, 0x00, 0x00,
    0x11, 0x01, 0x1f, 0x01, 0x13, 0x01, 0x00, 0x00,
    0x1b, 0x01, 0x00, 0x00, 0x1c, 0x01, 0x00, 0x00,
    0x1a, 0x01, 0x1f, 0x01, 0x15, 0x40, 0x00, 0x00,
    0x80, 0x04, 0x00, 0x00, 0x14, 0x40, 0x00, 0x00,
    0x04, 0x00, 0x00, 0x00, 0x16, 0x40, 0x00, 0x00,
    0x04, 0x00, 0x00, 0x00, 0x18, 0x01, 0x00, 0x00,
    0x21, 0x01, 0x00, 0x00, 0x20, 0x01, 0x00, 0x00,
    0x22, 0x01, 0x00, 0x00, 0x25, 0x01, 0x00, 0x10,
    0x26, 0x01, 0x00, 0x80, 0x27, 0x01, 0xff, 0xff,
    0x16, 0x01, 0x00, 0x00, 0x15, 0x01, 0x7f, 0x00,
    0x17, 0x01, 0x0f, 0x00, 0x24, 0x01, 0x00, 0x02,
    0x2f, 0x01, 0x00, 0x00, 0x02, 0x00, 0x01, 0x00,
    0x80, 0x40, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00,
    0x00, 0x40, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00,
    0x10, 0x40, 0x00, 0x00, 0x80, 0x04, 0x00, 0x00,
    0x2f, 0x01, 0x07, 0x00, 0x02, 0x00, 0x01, 0x00,
    0x80, 0x40, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,
    0x00, 0x40, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00,
    0x10, 0x40, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00,
    0x02, 0x00, 0x01, 0x00, 0x80, 0x40, 0x00, 0x00,
    0x60, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00,
    0x00, 0x6c, 0x00, 0x00, 0x10, 0x40, 0x00, 0x00,
    0x80, 0x0d, 0x00, 0x00, 0x02, 0x00, 0x01, 0x00,
    0x80, 0x40, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00,
    0x00, 0x40, 0x00, 0x00, 0x00, 0x90, 0x00, 0x00,
    0x10, 0x40, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00,
    0x02, 0x00, 0x01, 0x00, 0x80, 0x40, 0x00, 0x00,
    0xa0, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00,
    0x00, 0xb4, 0x00, 0x00, 0x10, 0x40, 0x00, 0x00,
    0x80, 0x16, 0x00, 0x00, 0x02, 0x00, 0x01, 0x00,
    0x80, 0x40, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00,
    0x00, 0x40, 0x00, 0x00, 0x00, 0xd8, 0x00, 0x00,
    0x10, 0x40, 0x00, 0x00, 0x00, 0x1b, 0x00, 0x00,
    0x02, 0x00, 0x01, 0x00, 0x80, 0x40, 0x00, 0x00,
    0xe0, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00,
    0x00, 0xfc, 0x00, 0x00, 0x10, 0x40, 0x00, 0x00,
    0x80, 0x1f, 0x00, 0x00, 0x02, 0x00, 0x01, 0x00,
    0x80, 0x40, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00,
    0x00, 0x40, 0x00, 0x00, 0x00, 0x20, 0x01, 0x00,
    0x10, 0x40, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00,
    0x02, 0x00, 0x01, 0x00, 0x00, 0x00, 0xff, 0xff,
};

// W (768,288) @ x (288,) -> xout (768,)
__attribute__((section(".cms_data"), aligned(16)))
static unsigned char cmd_data_b_9_h_768_w_1_c_32[] = {
    0x43, 0x4f, 0x50, 0x31, 0x01, 0x00, 0x10, 0x00,
    0x18, 0x01, 0x00, 0x20, 0x00, 0x70, 0x00, 0x20,
    0x05, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,
    0x05, 0x00, 0x00, 0x00, 0x02, 0x00, 0x8e, 0x00,
    0x85, 0x01, 0x01, 0x00, 0x8f, 0x01, 0x03, 0x00,
    0x80, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x81, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x82, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x83, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x8b, 0x01, 0x00, 0x00, 0x8c, 0x01, 0x00, 0x00,
    0x8a, 0x01, 0x00, 0x00, 0x85, 0x40, 0x00, 0x00,
    0x20, 0x00, 0x00, 0x00, 0x84, 0x40, 0x00, 0x00,
    0x20, 0x00, 0x00, 0x00, 0x86, 0x40, 0x00, 0x00,
    0x01, 0x00, 0x00, 0x00, 0x89, 0x01, 0x00, 0x00,
    0x2e, 0x01, 0x00, 0x00, 0x24, 0x40, 0x00, 0x00,
    0x01, 0x00, 0x00, 0x00, 0x05, 0x01, 0x01, 0x00,
    0x0f, 0x01, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x03, 0x40, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x0b, 0x01, 0x00, 0x00,
    0x0c, 0x01, 0x00, 0x00, 0x0a, 0x01, 0xff, 0x02,
    0x04, 0x01, 0x1f, 0x00, 0x05, 0x40, 0x00, 0x00,
    0x00, 0x60, 0x00, 0x00, 0x04, 0x40, 0x00, 0x00,
    0x20, 0x00, 0x00, 0x00, 0x06, 0x40, 0x00, 0x00,
    0x01, 0x00, 0x00, 0x00, 0x09, 0x01, 0x00, 0x00,
    0x07, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00,
    0x01, 0x01, 0x00, 0x00, 0x03, 0x01, 0x00, 0x00,
    0x02, 0x01, 0x00, 0x00, 0x14, 0x01, 0x05, 0x01,
    0x1f, 0x01, 0x01, 0x00, 0x10, 0x40, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x11, 0x40, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x12, 0x40, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x13, 0x40, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x12, 0x01, 0x00, 0x00,
    0x11, 0x01, 0xff, 0x02, 0x13, 0x01, 0x00, 0x00,
    0x1b, 0x01, 0x00, 0x00, 0x1c, 0x01, 0x00, 0x00,
    0x1a, 0x01, 0xff, 0x02, 0x15, 0x40, 0x00, 0x00,
    0x00, 0x0c, 0x00, 0x00, 0x14, 0x40, 0x00, 0x00,
    0x04, 0x00, 0x00, 0x00, 0x16, 0x40, 0x00, 0x00,
    0x04, 0x00, 0x00, 0x00, 0x18, 0x01, 0x00, 0x00,
    0x21, 0x01, 0x00, 0x00, 0x20, 0x01, 0x00, 0x00,
    0x22, 0x01, 0x00, 0x00, 0x25, 0x01, 0x00, 0x10,
    0x26, 0x01, 0x00, 0x80, 0x27, 0x01, 0xff, 0xff,
    0x16, 0x01, 0x00, 0x00, 0x15, 0x01, 0x7f, 0x00,
    0x17, 0x01, 0x0f, 0x00, 0x24, 0x01, 0x00, 0x02,
    0x2f, 0x01, 0x00, 0x00, 0x02, 0x00, 0x01, 0x00,
    0x80, 0x40, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00,
    0x00, 0x40, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00,
    0x10, 0x40, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00,
    0x2f, 0x01, 0x07, 0x00, 0x02, 0x00, 0x01, 0x00,
    0x80, 0x40, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,
    0x00, 0x40, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00,
    0x10, 0x40, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00,
    0x02, 0x00, 0x01, 0x00, 0x80, 0x40, 0x00, 0x00,
    0x60, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00,
    0x00, 0x20, 0x01, 0x00, 0x10, 0x40, 0x00, 0x00,
    0x00, 0x24, 0x00, 0x00, 0x02, 0x00, 0x01, 0x00,
    0x80, 0x40, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00,
    0x00, 0x40, 0x00, 0x00, 0x00, 0x80, 0x01, 0x00,
    0x10, 0x40, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00,
    0x02, 0x00, 0x01, 0x00, 0x80, 0x40, 0x00, 0x00,
    0xa0, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00,
    0x00, 0xe0, 0x01, 0x00, 0x10, 0x40, 0x00, 0x00,
    0x00, 0x3c, 0x00, 0x00, 0x02, 0x00, 0x01, 0x00,
    0x80, 0x40, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00,
    0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 0x02, 0x00,
    0x10, 0x40, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00,
    0x02, 0x00, 0x01, 0x00, 0x80, 0x40, 0x00, 0x00,
    0xe0, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00,
    0x00, 0xa0, 0x02, 0x00, 0x10, 0x40, 0x00, 0x00,
    0x00, 0x54, 0x00, 0x00, 0x02, 0x00, 0x01, 0x00,
    0x80, 0x40, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00,
    0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00,
    0x10, 0x40, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00,
    0x02, 0x00, 0x01, 0x00, 0x00, 0x00, 0xff, 0xff,
};

// W (288,768) @ x (768,) -> xout (288,)
__attribute__((section(".cms_data"), aligned(16)))
static unsigned char cmd_data_b_24_h_288_w_1_c_32[] = {
    0x43, 0x4f, 0x50, 0x31, 0x01, 0x00, 0x10, 0x00,
    0x18, 0x01, 0x00, 0x20, 0x00, 0x70, 0x00, 0x20,
    0x05, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,
    0x05, 0x00, 0x00, 0x00, 0x02, 0x00, 0xf7, 0x00,
    0x85, 0x01, 0x01, 0x00, 0x8f, 0x01, 0x03, 0x00,
    0x80, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x81, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x82, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x83, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x8b, 0x01, 0x00, 0x00, 0x8c, 0x01, 0x00, 0x00,
    0x8a, 0x01, 0x00, 0x00, 0x85, 0x40, 0x00, 0x00,
    0x20, 0x00, 0x00, 0x00, 0x84, 0x40, 0x00, 0x00,
    0x20, 0x00, 0x00, 0x00, 0x86, 0x40, 0x00, 0x00,
    0x01, 0x00, 0x00, 0x00, 0x89, 0x01, 0x00, 0x00,
    0x2e, 0x01, 0x00, 0x00, 0x24, 0x40, 0x00, 0x00,
    0x01, 0x00, 0x00, 0x00, 0x05, 0x01, 0x01, 0x00,
    0x0f, 0x01, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x03, 0x40, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x0b, 0x01, 0x00, 0x00,
    0x0c, 0x01, 0x00, 0x00, 0x0a, 0x01, 0x1f, 0x01,
    0x04, 0x01, 0x1f, 0x00, 0x05, 0x40, 0x00, 0x00,
    0x00, 0x24, 0x00, 0x00, 0x04, 0x40, 0x00, 0x00,
    0x20, 0x00, 0x00, 0x00, 0x06, 0x40, 0x00, 0x00,
    0x01, 0x00, 0x00, 0x00, 0x09, 0x01, 0x00, 0x00,
    0x07, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00,
    0x01, 0x01, 0x00, 0x00, 0x03, 0x01, 0x00, 0x00,
    0x02, 0x01, 0x00, 0x00, 0x14, 0x01, 0x05, 0x01,
    0x1f, 0x01, 0x01, 0x00, 0x10, 0x40, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x11, 0x40, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x12, 0x40, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x13, 0x40, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x12, 0x01, 0x00, 0x00,
    0x11, 0x01, 0x1f, 0x01, 0x13, 0x01, 0x00, 0x00,
    0x1b, 0x01, 0x00, 0x00, 0x1c, 0x01, 0x00, 0x00,
    0x1a, 0x01, 0x1f, 0x01, 0x15, 0x40, 0x00, 0x00,
    0x80, 0x04, 0x00, 0x00, 0x14, 0x40, 0x00, 0x00,
    0x04, 0x00, 0x00, 0x00, 0x16, 0x40, 0x00, 0x00,
    0x04, 0x00, 0x00, 0x00, 0x18, 0x01, 0x00, 0x00,
    0x21, 0x01, 0x00, 0x00, 0x20, 0x01, 0x00, 0x00,
    0x22, 0x01, 0x00, 0x00, 0x25, 0x01, 0x00, 0x10,
    0x26, 0x01, 0x00, 0x80, 0x27, 0x01, 0xff, 0xff,
    0x16, 0x01, 0x00, 0x00, 0x15, 0x01, 0x7f, 0x00,
    0x17, 0x01, 0x0f, 0x00, 0x24, 0x01, 0x00, 0x02,
    0x2f, 0x01, 0x00, 0x00, 0x02, 0x00, 0x01, 0x00,
    0x80, 0x40, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00,
    0x00, 0x40, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00,
    0x10, 0x40, 0x00, 0x00, 0x80, 0x04, 0x00, 0x00,
    0x2f, 0x01, 0x07, 0x00, 0x02, 0x00, 0x01, 0x00,
    0x80, 0x40, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,
    0x00, 0x40, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00,
    0x10, 0x40, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00,
    0x02, 0x00, 0x01, 0x00, 0x80, 0x40, 0x00, 0x00,
    0x60, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00,
    0x00, 0x6c, 0x00, 0x00, 0x10, 0x40, 0x00, 0x00,
    0x80, 0x0d, 0x00, 0x00, 0x02, 0x00, 0x01, 0x00,
    0x80, 0x40, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00,
    0x00, 0x40, 0x00, 0x00, 0x00, 0x90, 0x00, 0x00,
    0x10, 0x40, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00,
    0x02, 0x00, 0x01, 0x00, 0x80, 0x40, 0x00, 0x00,
    0xa0, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00,
    0x00, 0xb4, 0x00, 0x00, 0x10, 0x40, 0x00, 0x00,
    0x80, 0x16, 0x00, 0x00, 0x02, 0x00, 0x01, 0x00,
    0x80, 0x40, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00,
    0x00, 0x40, 0x00, 0x00, 0x00, 0xd8, 0x00, 0x00,
    0x10, 0x40, 0x00, 0x00, 0x00, 0x1b, 0x00, 0x00,
    0x02, 0x00, 0x01, 0x00, 0x80, 0x40, 0x00, 0x00,
    0xe0, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00,
    0x00, 0xfc, 0x00, 0x00, 0x10, 0x40, 0x00, 0x00,
    0x80, 0x1f, 0x00, 0x00, 0x02, 0x00, 0x01, 0x00,
    0x80, 0x40, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00,
    0x00, 0x40, 0x00, 0x00, 0x00, 0x20, 0x01, 0x00,
    0x10, 0x40, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00,
    0x02, 0x00, 0x01, 0x00, 0x80, 0x40, 0x00, 0x00,
    0x20, 0x01, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00,
    0x00, 0x44, 0x01, 0x00, 0x10, 0x40, 0x00, 0x00,
    0x80, 0x28, 0x00, 0x00, 0x02, 0x00, 0x01, 0x00,
    0x80, 0x40, 0x00, 0x00, 0x40, 0x01, 0x00, 0x00,
    0x00, 0x40, 0x00, 0x00, 0x00, 0x68, 0x01, 0x00,
    0x10, 0x40, 0x00, 0x00, 0x00, 0x2d, 0x00, 0x00,
    0x02, 0x00, 0x01, 0x00, 0x80, 0x40, 0x00, 0x00,
    0x60, 0x01, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00,
    0x00, 0x8c, 0x01, 0x00, 0x10, 0x40, 0x00, 0x00,
    0x80, 0x31, 0x00, 0x00, 0x02, 0x00, 0x01, 0x00,
    0x80, 0x40, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00,
    0x00, 0x40, 0x00, 0x00, 0x00, 0xb0, 0x01, 0x00,
    0x10, 0x40, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00,
    0x02, 0x00, 0x01, 0x00, 0x80, 0x40, 0x00, 0x00,
    0xa0, 0x01, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00,
    0x00, 0xd4, 0x01, 0x00, 0x10, 0x40, 0x00, 0x00,
    0x80, 0x3a, 0x00, 0x00, 0x02, 0x00, 0x01, 0x00,
    0x80, 0x40, 0x00, 0x00, 0xc0, 0x01, 0x00, 0x00,
    0x00, 0x40, 0x00, 0x00, 0x00, 0xf8, 0x01, 0x00,
    0x10, 0x40, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00,
    0x02, 0x00, 0x01, 0x00, 0x80, 0x40, 0x00, 0x00,
    0xe0, 0x01, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00,
    0x00, 0x1c, 0x02, 0x00, 0x10, 0x40, 0x00, 0x00,
    0x80, 0x43, 0x00, 0x00, 0x02, 0x00, 0x01, 0x00,
    0x80, 0x40, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00,
    0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 0x02, 0x00,
    0x10, 0x40, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00,
    0x02, 0x00, 0x01, 0x00, 0x80, 0x40, 0x00, 0x00,
    0x20, 0x02, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00,
    0x00, 0x64, 0x02, 0x00, 0x10, 0x40, 0x00, 0x00,
    0x80, 0x4c, 0x00, 0x00, 0x02, 0x00, 0x01, 0x00,
    0x80, 0x40, 0x00, 0x00, 0x40, 0x02, 0x00, 0x00,
    0x00, 0x40, 0x00, 0x00, 0x00, 0x88, 0x02, 0x00,
    0x10, 0x40, 0x00, 0x00, 0x00, 0x51, 0x00, 0x00,
    0x02, 0x00, 0x01, 0x00, 0x80, 0x40, 0x00, 0x00,
    0x60, 0x02, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00,
    0x00, 0xac, 0x02, 0x00, 0x10, 0x40, 0x00, 0x00,
    0x80, 0x55, 0x00, 0x00, 0x02, 0x00, 0x01, 0x00,
    0x80, 0x40, 0x00, 0x00, 0x80, 0x02, 0x00, 0x00,
    0x00, 0x40, 0x00, 0x00, 0x00, 0xd0, 0x02, 0x00,
    0x10, 0x40, 0x00, 0x00, 0x00, 0x5a, 0x00, 0x00,
    0x02, 0x00, 0x01, 0x00, 0x80, 0x40, 0x00, 0x00,
    0xa0, 0x02, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00,
    0x00, 0xf4, 0x02, 0x00, 0x10, 0x40, 0x00, 0x00,
    0x80, 0x5e, 0x00, 0x00, 0x02, 0x00, 0x01, 0x00,
    0x80, 0x40, 0x00, 0x00, 0xc0, 0x02, 0x00, 0x00,
    0x00, 0x40, 0x00, 0x00, 0x00, 0x18, 0x03, 0x00,
    0x10, 0x40, 0x00, 0x00, 0x00, 0x63, 0x00, 0x00,
    0x02, 0x00, 0x01, 0x00, 0x80, 0x40, 0x00, 0x00,
    0xe0, 0x02, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00,
    0x00, 0x3c, 0x03, 0x00, 0x10, 0x40, 0x00, 0x00,
    0x80, 0x67, 0x00, 0x00, 0x02, 0x00, 0x01, 0x00,
    0x00, 0x00, 0xff, 0xff,
};

// W (32000,288) @ x (288,) -> xout (32000,)
__attribute__((section(".cms_data"), aligned(16)))
static unsigned char cmd_data_b_9_h_32000_w_1_c_32[] = {
    0x43, 0x4f, 0x50, 0x31, 0x01, 0x00, 0x10, 0x00,
    0x18, 0x01, 0x00, 0x20, 0x00, 0x70, 0x00, 0x20,
    0x05, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,
    0x05, 0x00, 0x00, 0x00, 0x02, 0x00, 0x8e, 0x00,
    0x85, 0x01, 0x01, 0x00, 0x8f, 0x01, 0x03, 0x00,
    0x80, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x81, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x82, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x83, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x8b, 0x01, 0x00, 0x00, 0x8c, 0x01, 0x00, 0x00,
    0x8a, 0x01, 0x00, 0x00, 0x85, 0x40, 0x00, 0x00,
    0x20, 0x00, 0x00, 0x00, 0x84, 0x40, 0x00, 0x00,
    0x20, 0x00, 0x00, 0x00, 0x86, 0x40, 0x00, 0x00,
    0x01, 0x00, 0x00, 0x00, 0x89, 0x01, 0x00, 0x00,
    0x2e, 0x01, 0x00, 0x00, 0x24, 0x40, 0x00, 0x00,
    0x01, 0x00, 0x00, 0x00, 0x05, 0x01, 0x01, 0x00,
    0x0f, 0x01, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x03, 0x40, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x0b, 0x01, 0x00, 0x00,
    0x0c, 0x01, 0x00, 0x00, 0x0a, 0x01, 0xff, 0x7c,
    0x04, 0x01, 0x1f, 0x00, 0x05, 0x40, 0x00, 0x00,
    0x00, 0xa0, 0x0f, 0x00, 0x04, 0x40, 0x00, 0x00,
    0x20, 0x00, 0x00, 0x00, 0x06, 0x40, 0x00, 0x00,
    0x01, 0x00, 0x00, 0x00, 0x09, 0x01, 0x00, 0x00,
    0x07, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00,
    0x01, 0x01, 0x00, 0x00, 0x03, 0x01, 0x00, 0x00,
    0x02, 0x01, 0x00, 0x00, 0x14, 0x01, 0x05, 0x01,
    0x1f, 0x01, 0x01, 0x00, 0x10, 0x40, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x11, 0x40, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x12, 0x40, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x13, 0x40, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x12, 0x01, 0x00, 0x00,
    0x11, 0x01, 0xff, 0x7c, 0x13, 0x01, 0x00, 0x00,
    0x1b, 0x01, 0x00, 0x00, 0x1c, 0x01, 0x00, 0x00,
    0x1a, 0x01, 0xff, 0x7c, 0x15, 0x40, 0x00, 0x00,
    0x00, 0xf4, 0x01, 0x00, 0x14, 0x40, 0x00, 0x00,
    0x04, 0x00, 0x00, 0x00, 0x16, 0x40, 0x00, 0x00,
    0x04, 0x00, 0x00, 0x00, 0x18, 0x01, 0x00, 0x00,
    0x21, 0x01, 0x00, 0x00, 0x20, 0x01, 0x00, 0x00,
    0x22, 0x01, 0x00, 0x00, 0x25, 0x01, 0x00, 0x10,
    0x26, 0x01, 0x00, 0x80, 0x27, 0x01, 0xff, 0xff,
    0x16, 0x01, 0x00, 0x00, 0x15, 0x01, 0x7f, 0x00,
    0x17, 0x01, 0x0f, 0x00, 0x24, 0x01, 0x00, 0x02,
    0x2f, 0x01, 0x00, 0x00, 0x02, 0x00, 0x01, 0x00,
    0x80, 0x40, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00,
    0x00, 0x40, 0x00, 0x00, 0x00, 0xa0, 0x0f, 0x00,
    0x10, 0x40, 0x00, 0x00, 0x00, 0xf4, 0x01, 0x00,
    0x2f, 0x01, 0x07, 0x00, 0x02, 0x00, 0x01, 0x00,
    0x80, 0x40, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,
    0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 0x1f, 0x00,
    0x10, 0x40, 0x00, 0x00, 0x00, 0xe8, 0x03, 0x00,
    0x02, 0x00, 0x01, 0x00, 0x80, 0x40, 0x00, 0x00,
    0x60, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00,
    0x00, 0xe0, 0x2e, 0x00, 0x10, 0x40, 0x00, 0x00,
    0x00, 0xdc, 0x05, 0x00, 0x02, 0x00, 0x01, 0x00,
    0x80, 0x40, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00,
    0x00, 0x40, 0x00, 0x00, 0x00, 0x80, 0x3e, 0x00,
    0x10, 0x40, 0x00, 0x00, 0x00, 0xd0, 0x07, 0x00,
    0x02, 0x00, 0x01, 0x00, 0x80, 0x40, 0x00, 0x00,
    0xa0, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00,
    0x00, 0x20, 0x4e, 0x00, 0x10, 0x40, 0x00, 0x00,
    0x00, 0xc4, 0x09, 0x00, 0x02, 0x00, 0x01, 0x00,
    0x80, 0x40, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00,
    0x00, 0x40, 0x00, 0x00, 0x00, 0xc0, 0x5d, 0x00,
    0x10, 0x40, 0x00, 0x00, 0x00, 0xb8, 0x0b, 0x00,
    0x02, 0x00, 0x01, 0x00, 0x80, 0x40, 0x00, 0x00,
    0xe0, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00,
    0x00, 0x60, 0x6d, 0x00, 0x10, 0x40, 0x00, 0x00,
    0x00, 0xac, 0x0d, 0x00, 0x02, 0x00, 0x01, 0x00,
    0x80, 0x40, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00,
    0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x7d, 0x00,
    0x10, 0x40, 0x00, 0x00, 0x00, 0xa0, 0x0f, 0x00,
    0x02, 0x00, 0x01, 0x00, 0x00, 0x00, 0xff, 0xff,
};

void set_params_for_matmul_288_288(void **cms_data, size_t *cms_data_size, uint64_t *base_addrs, size_t *base_addrs_size, void *ifm1, void *ifm2, void **ofm)
{
    *cms_data = cmd_data_b_9_h_288_w_1_c_32;
    *cms_data_size = sizeof(cmd_data_b_9_h_288_w_1_c_32);

    *ofm = (&(ethosu_arena[0]));

    base_addrs[0] = (uintptr_t)(ifm1);
    base_addrs_size[0] = 82944;
    base_addrs[1] = (uintptr_t)(ethosu_arena);
    base_addrs_size[1] = 10368;
    base_addrs[3] = (uintptr_t)(ifm2);
    base_addrs_size[3] = 288;
};

void set_params_for_matmul_768_288(void **cms_data, size_t *cms_data_size, uint64_t *base_addrs, size_t *base_addrs_size, void *ifm1, void *ifm2, void **ofm)
{
    *cms_data = cmd_data_b_9_h_768_w_1_c_32;
    *cms_data_size = sizeof(cmd_data_b_9_h_768_w_1_c_32);

    *ofm = (&(ethosu_arena[0]));

    base_addrs[0] = (uintptr_t)(ifm1);
    base_addrs_size[0] = 221184;
    base_addrs[1] = (uintptr_t)(ethosu_arena);
    base_addrs_size[1] = 27648;
    base_addrs[3] = (uintptr_t)(ifm2);
    base_addrs_size[3] = 288;
};

void set_params_for_matmul_288_768(void **cms_data, size_t *cms_data_size, uint64_t *base_addrs, size_t *base_addrs_size, void *ifm1, void *ifm2, void **ofm)
{
    *cms_data = cmd_data_b_24_h_288_w_1_c_32;
    *cms_data_size = sizeof(cmd_data_b_24_h_288_w_1_c_32);

    *ofm = (&(ethosu_arena[0]));

    base_addrs[0] = (uintptr_t)(ifm1);
    base_addrs_size[0] = 221184;
    base_addrs[1] = (uintptr_t)(ethosu_arena);
    base_addrs_size[1] = 27648;
    base_addrs[3] = (uintptr_t)(ifm2);
    base_addrs_size[3] = 768;
};

void set_params_for_matmul_32000_288(void **cms_data, size_t *cms_data_size, uint64_t *base_addrs, size_t *base_addrs_size, void *ifm1, void *ifm2, void **ofm)
{
    *cms_data = cmd_data_b_9_h_32000_w_1_c_32;
    *cms_data_size = sizeof(cmd_data_b_9_h_32000_w_1_c_32);

    *ofm = (&(ethosu_arena[0]));

    base_addrs[0] = (uintptr_t)(ifm1);
    base_addrs_size[0] = 9216000;
    base_addrs[1] = (uintptr_t)(ethosu_arena);
    base_addrs_size[1] = 1152000;
    base_addrs[3] = (uintptr_t)(ifm2);
    base_addrs_size[3] = 288;
};

#ifdef __cplusplus
}
#endif // __cplusplus
