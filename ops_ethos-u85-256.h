#pragma once

#include <stdint.h>

#ifdef __cplusplus
extern "C" {
#endif // __cplusplus

#define ETHOSU_ARENA_SIZE 885504
__attribute__((section(".ethosu_arena"), aligned(16)))
static uint8_t ethosu_arena[ETHOSU_ARENA_SIZE];


__attribute__((section(".cms_data"), aligned(16)))
static unsigned char cmd_data_288_768[] = {
    0x43, 0x4f, 0x50, 0x31, 0x01, 0x00, 0x10, 0x00,
    0x18, 0x01, 0x00, 0x20, 0x00, 0x70, 0x00, 0x20,
    0x05, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,
    0x05, 0x00, 0x00, 0x00, 0x02, 0x00, 0x55, 0x00,
    0x85, 0x01, 0x01, 0x00, 0x8f, 0x01, 0x01, 0x00,
    0x80, 0x40, 0x00, 0x00, 0x00, 0x80, 0x0d, 0x00,
    0x81, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x82, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x83, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x8b, 0x01, 0x00, 0x00, 0x8c, 0x01, 0x00, 0x00,
    0x8a, 0x01, 0x17, 0x00, 0x85, 0x40, 0x00, 0x00,
    0x00, 0x03, 0x00, 0x00, 0x84, 0x40, 0x00, 0x00,
    0x20, 0x00, 0x00, 0x00, 0x86, 0x40, 0x00, 0x00,
    0x01, 0x00, 0x00, 0x00, 0x89, 0x01, 0x00, 0x00,
    0x2e, 0x01, 0x00, 0x00, 0x24, 0x40, 0x00, 0x00,
    0x01, 0x00, 0x00, 0x00, 0x05, 0x01, 0x01, 0x00,
    0x0f, 0x01, 0x01, 0x00, 0x00, 0x40, 0x00, 0x00,
    0x00, 0x20, 0x0a, 0x00, 0x01, 0x40, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x03, 0x40, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x0b, 0x01, 0x00, 0x00,
    0x0c, 0x01, 0x00, 0x00, 0x0a, 0x01, 0xff, 0x1a,
    0x04, 0x01, 0x1f, 0x00, 0x05, 0x40, 0x00, 0x00,
    0x00, 0x60, 0x03, 0x00, 0x04, 0x40, 0x00, 0x00,
    0x20, 0x00, 0x00, 0x00, 0x06, 0x40, 0x00, 0x00,
    0x01, 0x00, 0x00, 0x00, 0x09, 0x01, 0x00, 0x00,
    0x07, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00,
    0x01, 0x01, 0x00, 0x00, 0x03, 0x01, 0x00, 0x00,
    0x02, 0x01, 0x00, 0x00, 0x14, 0x01, 0x05, 0x01,
    0x1f, 0x01, 0x01, 0x00, 0x10, 0x40, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x11, 0x40, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x12, 0x40, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x13, 0x40, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x12, 0x01, 0x00, 0x00,
    0x11, 0x01, 0xff, 0x1a, 0x13, 0x01, 0x17, 0x00,
    0x1b, 0x01, 0x00, 0x00, 0x1c, 0x01, 0x00, 0x00,
    0x1a, 0x01, 0xff, 0x1a, 0x15, 0x40, 0x00, 0x00,
    0x00, 0x20, 0x0a, 0x00, 0x14, 0x40, 0x00, 0x00,
    0x60, 0x00, 0x00, 0x00, 0x16, 0x40, 0x00, 0x00,
    0x04, 0x00, 0x00, 0x00, 0x18, 0x01, 0x00, 0x00,
    0x21, 0x01, 0x00, 0x00, 0x20, 0x01, 0x00, 0x00,
    0x22, 0x01, 0x00, 0x00, 0x25, 0x01, 0x00, 0x10,
    0x26, 0x01, 0x00, 0x80, 0x27, 0x01, 0xff, 0xff,
    0x16, 0x01, 0x00, 0x00, 0x15, 0x01, 0x7f, 0x00,
    0x17, 0x01, 0x0f, 0x00, 0x24, 0x01, 0x00, 0x02,
    0x2f, 0x01, 0x00, 0x00, 0x02, 0x00, 0x01, 0x00,
    0x00, 0x00, 0xff, 0xff,
};

void set_params_for_mul_sum_288_768(void **cms_data, size_t *cms_data_size, uint64_t *base_addrs, size_t *base_addrs_size, void *ifm1, void *ifm2, void **ofm)
{
    *cms_data = cmd_data_288_768;
    *cms_data_size = sizeof(cmd_data_288_768);

    *ofm = (&(ethosu_arena[0]));

    base_addrs[0] = (uintptr_t)(ifm1);
    base_addrs_size[0] = 221184;
    base_addrs[1] = (uintptr_t)(ethosu_arena);
    base_addrs_size[1] = 885504;
    base_addrs[2] = (uintptr_t)(ifm2);
    base_addrs_size[2] = 768;
};

#ifdef __cplusplus
}
#endif // __cplusplus
